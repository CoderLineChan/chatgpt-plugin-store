openapi: 3.0.0
info:
  version: 1.0.0
  title: Search API
  description: A comprehensive API for neural internet-scale search, allowing users to perform queries and retrieve results from a wide variety of sources.

servers:
  - url: https://api.metaphor.systems

paths:
  /search:
    post:
      operationId: search
      summary: Search
      description: Perform a search with a Metaphor prompt-engineered query and retrieve a list of relevant results.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  example: "Here is an article about the state of search:"
                  description: "The query string. On the web, people often recommend content - it's vital that the query takes the form of a declarative suggestion, where a high quality search result link would follow."
                numResults:
                  type: integer
                  example: 20
                  description: "Number of search results to return. Minimum 20. Maximum 500. Default 100."
              required:
                - query

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    description: "A list of search results containing title, URL, creation date, and author."
                    items:
                      $ref: "#/components/schemas/Result"
              example:
                results:
                  - title: "Google Search is Dying"
                    url: https://dkb.blog/p/google-search-is-dying
                    dateCreated: "2022-02-14"
                    author: "Dmitri Brereton"
      security:
        - apikey: []
  /findSimilar:
    post:
      operationId: findSimilar
      summary: Find similar links
      description: Find similar links to the link provided.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  example: "https://slatestarcodex.com/2014/07/30/meditations-on-moloch/"
                  description: "The url for which you would like to find similar links"
                numResults:
                  type: integer
                  example: 20
                  description: "Number of search results to return. Minimum 20. Maximum 500. Default 100"
              required:
                - url

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    description: "A list of search results containing title, URL, creation date, and author."
                    items:
                      $ref: "#/components/schemas/Result"
              example:
                results:
                  - title: "Misperceptions on Moloch"
                    url: "https://slatestarcodex.com/2014/08/01/misperceptions-on-moloch/"
                    dateCreated: "2014-08-01"
                    author: "Scott Alexander"
      security:
        - apikey: []

components:
  securitySchemes:
    apikey:
      type: apiKey
      name: x-api-key
      in: header
  schemas:
    Result:
      type: object
      properties:
        title:
          type: string
          description: "The title of the search result, typically representing the main heading of the content."
        url:
          type: string
          format: uri
          description: "The URL of the search result, which directs to the web page containing the relevant content."
        dateCreated:
          type: string
          nullable: true
          description: "An estimate of the creation date, from parsing HTML content. Format is YYYY-MM-DD. Nullable"
        author:
          type: string
          nullable: true
          description: "If available, the author of the content. Nullable"
