{
  "openapi": "3.0.2",
  "info": {
    "title": "Origamist",
    "description": "ChatGPT Plugin server for creating computational notebooks (in Python!), allowing you to execute code, explore data, and visualize results.",
    "version": "0.23.0"
  },
  "servers": [
    {
      "url": "https://chat.noteable.io",
      "description": "Origamist server on https://chat.noteable.io"
    }
  ],
  "paths": {
    "/api/origami/p/default": {
      "get": {
        "summary": "Get Default Project",
        "description": "Get the user's configured default project.",
        "operationId": "get_default_project",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Openai Conversation Id",
              "type": "string"
            },
            "name": "openai_conversation_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Ephemeral User Id",
              "type": "string"
            },
            "name": "openai_ephemeral_user_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Subdivision1 Iso Code",
              "type": "string"
            },
            "name": "openai_subdivision1_iso_code",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "summary": "Set Default Project",
        "description": "Configure the user's default project (by UUID) for new notebooks.",
        "operationId": "set_default_project",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "New Default Project Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "new_default_project_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Conversation Id",
              "type": "string"
            },
            "name": "openai_conversation_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Ephemeral User Id",
              "type": "string"
            },
            "name": "openai_ephemeral_user_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Subdivision1 Iso Code",
              "type": "string"
            },
            "name": "openai_subdivision1_iso_code",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Set Default Project",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "delete": {
        "summary": "Delete Default Project",
        "description": "Clear the user's default project.",
        "operationId": "clear_default_project",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Openai Conversation Id",
              "type": "string"
            },
            "name": "openai_conversation_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Ephemeral User Id",
              "type": "string"
            },
            "name": "openai_ephemeral_user_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Subdivision1 Iso Code",
              "type": "string"
            },
            "name": "openai_subdivision1_iso_code",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Clear Default Project",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/origami/f/": {
      "post": {
        "summary": "Create Notebook",
        "description": "Creates a new notebook. If no project ID is provided, the user's default project will be used.",
        "operationId": "create_notebook",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Openai Conversation Id",
              "type": "string"
            },
            "name": "openai_conversation_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Ephemeral User Id",
              "type": "string"
            },
            "name": "openai_ephemeral_user_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Subdivision1 Iso Code",
              "type": "string"
            },
            "name": "openai_subdivision1_iso_code",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNotebookRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/origami/f/{file_id}": {
      "get": {
        "summary": "Get Notebook",
        "description": "Get a summary of a notebook, including the name and list of cell ids.",
        "operationId": "get_notebook",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "File Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Conversation Id",
              "type": "string"
            },
            "name": "openai_conversation_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Ephemeral User Id",
              "type": "string"
            },
            "name": "openai_ephemeral_user_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Subdivision1 Iso Code",
              "type": "string"
            },
            "name": "openai_subdivision1_iso_code",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotebookSummary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/origami/f/{file_id}/datasources": {
      "get": {
        "summary": "Get Datasources",
        "description": "Get the datasources for a notebook.",
        "operationId": "get_datasources",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "File Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Conversation Id",
              "type": "string"
            },
            "name": "openai_conversation_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Ephemeral User Id",
              "type": "string"
            },
            "name": "openai_ephemeral_user_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Subdivision1 Iso Code",
              "type": "string"
            },
            "name": "openai_subdivision1_iso_code",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Datasources",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DataSource"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/origami/f/{file_id}/c/{cell_id}": {
      "get": {
        "summary": "Get Cell",
        "description": "Return Cell model details",
        "operationId": "get_cell",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "File Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Cell Id",
              "type": "string"
            },
            "name": "cell_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Conversation Id",
              "type": "string"
            },
            "name": "openai_conversation_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Ephemeral User Id",
              "type": "string"
            },
            "name": "openai_ephemeral_user_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Subdivision1 Iso Code",
              "type": "string"
            },
            "name": "openai_subdivision1_iso_code",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Cell",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "put": {
        "summary": "Update Cell",
        "description": "Replace the source code of a cell.",
        "operationId": "update_cell",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "File Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Cell Id",
              "type": "string"
            },
            "name": "cell_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Conversation Id",
              "type": "string"
            },
            "name": "openai_conversation_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Ephemeral User Id",
              "type": "string"
            },
            "name": "openai_ephemeral_user_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Subdivision1 Iso Code",
              "type": "string"
            },
            "name": "openai_subdivision1_iso_code",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCellRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      },
      "post": {
        "summary": "Change Cell Type",
        "description": "Endpoint to allow updating the type of a cell. Currently only supports changing\nbetween Code, Markdown, and SQL cells.",
        "operationId": "change_cell_type",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "File Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Cell Id",
              "type": "string"
            },
            "name": "cell_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Conversation Id",
              "type": "string"
            },
            "name": "openai_conversation_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Ephemeral User Id",
              "type": "string"
            },
            "name": "openai_ephemeral_user_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Subdivision1 Iso Code",
              "type": "string"
            },
            "name": "openai_subdivision1_iso_code",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeCellTypeRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/origami/f/{file_id}/c": {
      "post": {
        "summary": "Create Cell",
        "description": "Create a code or markdown cell.",
        "operationId": "create_cell",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "File Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Conversation Id",
              "type": "string"
            },
            "name": "openai_conversation_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Ephemeral User Id",
              "type": "string"
            },
            "name": "openai_ephemeral_user_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Subdivision1 Iso Code",
              "type": "string"
            },
            "name": "openai_subdivision1_iso_code",
            "in": "query"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCellRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Create Cell",
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/origami/f/{file_id}/c/{cell_id}/run": {
      "post": {
        "summary": "Run Cell",
        "description": "Run a Cell within a Notebook by ID.",
        "operationId": "run_cell",
        "parameters": [
          {
            "required": true,
            "schema": {
              "title": "File Id",
              "type": "string",
              "format": "uuid"
            },
            "name": "file_id",
            "in": "path"
          },
          {
            "required": true,
            "schema": {
              "title": "Cell Id",
              "type": "string"
            },
            "name": "cell_id",
            "in": "path"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Conversation Id",
              "type": "string"
            },
            "name": "openai_conversation_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Ephemeral User Id",
              "type": "string"
            },
            "name": "openai_ephemeral_user_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Subdivision1 Iso Code",
              "type": "string"
            },
            "name": "openai_subdivision1_iso_code",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Run Cell",
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/RunCellResponse"
                    },
                    {
                      "$ref": "#/components/schemas/Summary"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    },
    "/api/origami/u/me": {
      "get": {
        "summary": "Get User Info",
        "description": "Get details of the Plugin user's Noteable account information.\n - useful when debugging permissions issues",
        "operationId": "get_user_info_api_origami_u_me_get",
        "parameters": [
          {
            "required": false,
            "schema": {
              "title": "Openai Conversation Id",
              "type": "string"
            },
            "name": "openai_conversation_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Ephemeral User Id",
              "type": "string"
            },
            "name": "openai_ephemeral_user_id",
            "in": "query"
          },
          {
            "required": false,
            "schema": {
              "title": "Openai Subdivision1 Iso Code",
              "type": "string"
            },
            "name": "openai_subdivision1_iso_code",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "HTTPBearer": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "CellState": {
        "title": "CellState",
        "enum": [
          "not_run",
          "queued",
          "executing",
          "finished_with_no_error",
          "finished_with_error",
          "catastrophic_failure",
          "dequeued",
          "interrupted"
        ],
        "description": "The type representation for cell state within a cell status message."
      },
      "ChangeCellTypeRequest": {
        "title": "ChangeCellTypeRequest",
        "required": [
          "cell_type"
        ],
        "type": "object",
        "properties": {
          "cell_type": {
            "title": "Cell Type",
            "enum": [
              "code",
              "markdown",
              "sql"
            ],
            "type": "string"
          },
          "db_connection": {
            "title": "Db Connection",
            "type": "string"
          },
          "assign_results_to": {
            "title": "Assign Results To",
            "type": "string"
          }
        }
      },
      "CreateCellRequest": {
        "title": "CreateCellRequest",
        "type": "object",
        "properties": {
          "cell_id": {
            "title": "Cell Id",
            "type": "string"
          },
          "cell_type": {
            "title": "Cell Type",
            "enum": [
              "code",
              "markdown",
              "sql"
            ],
            "type": "string",
            "description": "The type of cell to create.",
            "default": "code"
          },
          "and_run": {
            "title": "Run Cell",
            "type": "boolean",
            "description": "Whether to run the cell after creating it. Only applies to code and sql cells.",
            "default": false
          },
          "source": {
            "title": "Source",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Lines of source code to place in the cell."
          },
          "after_cell_id": {
            "title": "After Cell ID",
            "type": "string",
            "description": "The ID of the cell to insert this one after. If null, it'll be added to the end of the notebook."
          },
          "datasource_id": {
            "title": "SQL cell datasource ID",
            "type": "string",
            "description": "datasource_id to run SQL against if this is a SQL cell"
          },
          "assign_results_to": {
            "title": "SQL cell results variable name",
            "type": "string",
            "description": "The variable name to assign SQL query results (as a Dataframe)"
          }
        }
      },
      "CreateNotebookRequest": {
        "title": "CreateNotebookRequest",
        "type": "object",
        "properties": {
          "project_id": {
            "title": "Project ID",
            "type": "string",
            "description": "The ID of the project to create the notebook in.  Will default to the user's default project if not provided.",
            "format": "uuid"
          },
          "notebook_name": {
            "title": "Notebook Name",
            "type": "string",
            "description": "The name of the notebook to create. Must end with .ipynb file extension."
          },
          "start_kernel": {
            "title": "Start Kernel",
            "type": "boolean",
            "description": "Whether to start the kernel after creating the notebook.",
            "default": true
          }
        }
      },
      "DataSource": {
        "title": "DataSource",
        "required": [
          "name",
          "description",
          "type_id",
          "sql_cell_handle"
        ],
        "type": "object",
        "properties": {
          "name": {
            "title": "Data Source Name",
            "type": "string",
            "description": "Name of the data source."
          },
          "description": {
            "title": "Data Source Description",
            "type": "string",
            "description": "The description of the data source."
          },
          "type_id": {
            "title": "Type of database",
            "type": "string",
            "description": "Type of Data Source"
          },
          "sql_cell_handle": {
            "title": "db_connection string",
            "type": "string",
            "description": "db_connection in the Noteable cell metadata for the database"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "NotebookSummary": {
        "title": "NotebookSummary",
        "required": [
          "id",
          "name",
          "summary_of_cells",
          "kernel_state",
          "kernel_state_description",
          "information"
        ],
        "type": "object",
        "properties": {
          "id": {
            "title": "Id",
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "summary_of_cells": {
            "title": "Summary Of Cells",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "kernel_state": {
            "title": "Kernel State",
            "type": "string"
          },
          "kernel_state_description": {
            "title": "Kernel State Description",
            "type": "string"
          },
          "information": {
            "title": "Information",
            "type": "string"
          },
          "assistant_hint": {
            "title": "Assistant Hint",
            "type": "string"
          }
        }
      },
      "RunCellResponse": {
        "title": "RunCellResponse",
        "required": [
          "execution_state",
          "cell_id",
          "cell_link",
          "assistant_hint"
        ],
        "type": "object",
        "properties": {
          "execution_state": {
            "$ref": "#/components/schemas/CellState"
          },
          "cell_id": {
            "title": "Cell Id",
            "type": "string"
          },
          "cell_link": {
            "title": "Cell Link",
            "type": "string"
          },
          "assistant_hint": {
            "title": "Assistant Hint",
            "type": "string",
            "description": "A hint for the assistant to display to the user."
          }
        }
      },
      "Summary": {
        "title": "Summary",
        "required": [
          "cell",
          "kernel_state"
        ],
        "type": "object",
        "properties": {
          "cell": {
            "title": "Cell",
            "type": "object"
          },
          "cell_state": {
            "$ref": "#/components/schemas/CellState"
          },
          "kernel_state": {
            "title": "Kernel State",
            "type": "string"
          },
          "kernel_state_description": {
            "title": "Kernel State Description",
            "type": "string"
          },
          "assistant_hint": {
            "title": "Assistant Hint",
            "type": "string"
          }
        }
      },
      "UpdateCellRequest": {
        "title": "UpdateCellRequest",
        "type": "object",
        "properties": {
          "source": {
            "title": "Source",
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Lines of source code to replace the cell with.",
            "default": []
          }
        }
      },
      "ValidationError": {
        "title": "ValidationError",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "HTTPBearer": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}